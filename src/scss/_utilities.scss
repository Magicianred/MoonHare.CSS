@mixin css($prefix: "") {
  $prefix: "";
  $sep: ":";

  // Layout

  .#{$prefix}border-box {
    box-sizing: border-box;
  }
  .#{$prefix}content-box {
    box-sizing: content-box;
  }

  @each $type
    in (
      inline
        inline-block
        block
        grid
        table
        table-row
        table-caption
        table-cell
        table-raw
        table-column
        table-column-group
        table-footer-group
        table-raw-group
        flex
        inline-flex
        flow-root
        grid
        inline-grid
        contents
        none
    )
  {
    .#{$prefix}#{$type} {
      display: #{$type};
    }
  }

  .#{$prefix}float {
    @each $value in (left right none) {
      &#{$sep}#{$value} {
        float: #{$value};
      }
    }
  }

  .#{$prefix}clear {
    @each $value in (left right both none) {
      &#{$sep}#{$value} {
        clear: #{$value};
      }
    }
  }

  .#{$prefix}object-fit {
    @each $value in (contain cover fill none scale-down) {
      &#{$sep}#{$value} {
        object-fit: #{$value};
      }
    }
  }

  .#{$prefix}object-position {
    @each $key, $value in $object-position {
      &#{$sep}#{$key} {
        object-position: #{$value};
      }
    }
  }

  .#{$prefix}overflow {
    @each $value in (auto hidden visible scroll) {
      &#{$sep}#{$value} {
        overflow: #{$value};
      }
      &-x#{$sep}#{$value} {
        overflow-x: #{$value};
      }
      &-y#{$sep}-y#{$value} {
        overflow-y: #{$value};
      }
    }
  }

  .#{$prefix}overscroll {
    @each $value in (auto contain none) {
      &#{$sep}#{$value} {
        overscroll-behavior: #{$value};
      }
      &-x#{$sep}#{$value} {
        overscroll-behavior-x: #{$value};
      }
      &-y#{$sep}-y#{$value} {
        overscroll-behavior-y: #{$value};
      }
    }
  }
}

@each $value in (static relative absolute fixed sticky) {
  .#{$prefix}#{$value} {
    position: #{$value};
  }
}

@each $key, $value in $position-values {
  @each $side in (top left right bottom)
    .#{$prefix}#{$sep}#{$side}#{$sep}#{$key} {
    #{$side}: #{$value};
  }
}
.#{$prefix}#inset#{$sep}#{$key} {
  top: #{$value};
  bottom: #{$value};
  left: #{$value};
  right: #{$value};
}
.#{$prefix}#inset-y#{$sep}#{$key} {
  top: #{$value};
  bottom: #{$value};
}
.#{$prefix}#inset-x#{$sep}#{$key} {
  left: #{$value};
  right: #{$value};
}
.#{$prefix}invisible {
  visibility: invisible;
}
.#{$prefix}visible {
  visibility: visible;
}
.#{$prefix}z {
  @each $value in $z-index {
    &#{$sep}#{$value} {
      z-index: #{$value};
    }
  }
}

// Flex
.#{$prefix}flex {
  @each $key,
    $value
      in (
        row: row,
        row-reverse: row-reverse,
        col: column,
        col-reverse: column-reverse
      )
  {
    &#{$sep}#{$key} {
      flex-direction: #{$value};
    }
  }
  @each $value in (wrap wrap-reverse nowrap) {
    &#{$sep}#{$value} {
      flex-wrap: #{$value};
    }
  }
  @each $key, $value in $flex {
    &#{$sep}#{$key} {
      flex: #{$value};
    }
  }
  @each $key, $value in $flex-grow {
    &#{$sep}#{$key} {
      flex-grow: #{$value};
    }
  }
  @each $key, $value in $flex-shrink {
    &#{$sep}#{$key} {
      flex-shrink: #{$value};
    }
  }
}
    // Background

    "background-attachment": (
      responsive: true,
      includes: (
        background-attachment: fixed local scroll,
      ),
      class: bg,
      keys: fixed local scroll,
    ),
    "background-clip": (
      responsive: true,
      includes: (
        background-attachment: border-box padding-box content-box text,
      ),
      class: bg-clip,
      keys: border padding content text,
    ),
    "background-color": (
      responsive: true,
      includes: (
        background-color: map-values($background-color),
      ),
      class: bg,
      keys: map-keys($background-color),
    ),
    "background-position": (
      responsive: true,
      includes: (
        background-position: center top bottom left right "left bottom" "right bottom" "left top" "right top",
      ),
      class: bg,
      keys: center top bottom left right "left bottom" "right bottom" "left top" "right top",
    ),
    "background-repeat": (
      responsive: true,
      includes: (
        background-position: repeat no-repeat repeat-x repeat-y round space,
      ),
      class: bg,
      keys: repeat no-repeat repeat-x repeat-y round space,
    ),
    "background-size": (
      responsive: true,
      includes: (
        background-size: auto contain cover,
      ),
      class: bg,
      keys: auto contain cover,
    ),
    "background-image": (
      responsive: true,
      includes: (
        background-image: map-values($background-image),
      ),
      class: bg,
      keys: map-keys($background-image),
    ),

  ),
  $utilities
);
